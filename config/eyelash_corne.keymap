/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#include "./keypos_def/keypos_42keys.h"                                     // keyposition helpers
#define 0  1  2  3  4  5 13 14 15 16 17 18  // left-hand keys
#define 7  8  9 10 11 12 22 23 24 25 26 27 // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define XXX  &none
#define ___  &trans
#define hmls hml LSHFT
#define hmrs hmr RSHFT
#define hmlc hml LCTRL
#define hmrc hmr RCTRL
#define hmla hml LALT
#define hmra hmr RALT
#define hmlg hml LGUI
#define hmrg hmr RGUI

#define COMBO_TIMEOUT_SHORT 30

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
};

/ {
    behaviors {
        tlt: thumb_layer_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER_TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        tlh: thumb_layer_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER_HOLD_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        hml: home_row_mode_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODE_LEFT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            require-prior-idle-ms = <75>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
            hold-while-undecided;
        };

        hmr: home_row_mode_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODE_RIGHT";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            require-prior-idle-ms = <75>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };
    macros {
        // (|)
        pair_par: pair_par {
            label = "pair_parentheses";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
        };
        // [|]
        pair_bkt: pair_bkt {
            label = "pair_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        };
        // {|}
        pair_brc: pair_brc {
            label = "pair_braces";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        };
        // '|'
        pair_sqt: pair_sqt {
            label = "pair_single_quotes";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp SQT &kp SQT &kp LEFT>;
        };
        // "|"
        pair_dqt: pair_dqt {
            label = "pair_double_quotes";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp DQT &kp DQT &kp LEFT>;
        };
        // `|`
        pair_btk: pair_btk {
            label = "pair_backticks";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
        };
        // ```|```
        pair_cbk: pair_cbk {
            label = "pair_code_block";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT &kp LEFT>;
        };
        // change bluetooth device
        bt_sel_0: bt_sel_0 {
            label = "bluetooth_select_0";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&out OUT_BLE &bt BT_SEL 0>;
        };
        bt_sel_1: bt_sel_1 {
            label = "bluetooth_select_1";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&out OUT_BLE &bt BT_SEL 1>;
        };
        bt_sel_2: bt_sel_2 {
            label = "bluetooth_select_2";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&out OUT_BLE &bt BT_SEL 2>;
        };
        bt_sel_3: bt_sel_3 {
            label = "bluetooth_select_3";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&out OUT_BLE &bt BT_SEL 3>;
        };
        bt_sel_4: bt_sel_4 {
            label = "bluetooth_select_4";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&out OUT_BLE &bt BT_SEL 4>;
        };
    };

    /*  KEY POSITIONS
        ╭─────────────────────────┬─────────────────────────╮
        │ LT5 LT4 LT3 LT2 LT1 LT0 │ RT0 RT1 RT2 RT3 RT4 RT5 │
        │ LM5 LM4 LM3 LM2 LM1 LM0 │ RM0 RM1 RM2 RM3 RM4 RM5 │
        │ LB5 LB4 LB3 LB2 LB1 LB0 │ RB0 RB1 RB2 RB3 RB4 RB5 │
        ╰───────────╮ LH2 LH1 LH0 │ RH0 RH1 RH2 ╭───────────╯
                    ╰─────────────┴─────────────╯             */

    combos {
        compatible = "zmk,combos";
        combo_bkt { // [|]
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <RT2 RT3>;
            bindings = <&pair_bkt>;
            layers = <0 1 2 3>;
        };
        combo_par { // (|)
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <RM2 RM3>; // ei
            bindings = <&pair_par>;
            layers = <0 1 2 3>;
        };
        combo_brc { // {|}
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <RB2 RB3>; // ,.
            bindings = <&pair_brc>;
            layers = <0 1 2 3>;
        };
        combo_btk { // `|`
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <RT3 RT4>; // y;
            bindings = <&pair_btk>;
            layers = <0 1 2 3>;
        };
        combo_sqt { // '|'
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <RM3 RM4>; // io
            bindings = <&pair_sqt>;
            layers = <0 1 2 3>;
        };
        combo_dqt { // "|"
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <RB3 RB4>; // ./
            bindings = <&pair_dqt>;
            layers = <0 1 2 3>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        colemak_layer {
            display-name = "CMK-DH";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp CAPS      &kp Q         &kp W         &kp F         &kp P         &kp B                  XXX      &kp J         &kp L         &kp U         &kp Y         &kp SEMI      &to 4
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp BSPC      &hmlg A       &hmlc R       &hmla S       &hmls T       &kp G              XXX XXX XXX  &kp M         &hmrs N       &hmra E       &hmrc I       &hmrg O       &kp DEL
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp SQT       &kp Z         &kp X         &kp C         &kp D         &kp V          XXX     XXX      &kp K         &kp H         &kp COMMA     &kp DOT       &kp FSLH      &kp BSLH
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &mt LSHFT RET &tlt 2 SPACE  &lt 1 ESC                       &lt 2 SPACE   &tlh 1 ESC    &mt RSHFT TAB
//                                           ╰─────────────┴─────────────┴─────────────╯                 ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        symbol_layer {
            display-name = "SYMBOL";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           &kp TILDE     &kp N1        &kp N2        &kp N3        &kp PIPE               XXX      &kp AMPS      &kp STAR      &kp LBKT      &kp RBKT      &kp CARET     ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &hmlg N0      &hmlc N4      &hmla N5      &hmls N6      &kp MINUS          XXX XXX XXX  &kp EQUAL     &hmrs UNDER   &hmra LPAR    &hmrc RPAR    &hmrg DLLR    ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp GRAVE     &kp N7        &kp N8        &kp N9        &kp HASH       XXX     XXX      &kp PRCNT     &kp PLUS      &kp LBRC      &kp RBRC      &kp EXCL      ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___           ___                             ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯                 ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        function_layer {
            display-name = "FUNC";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           &kp F1        &kp F2        &kp F3        &kp F4        &kp PSCRN              XXX      ___           ___           &kp UP        ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp F5        &kp F6        &kp F7        &kp F8        &kp DEL            XXX XXX XXX  &kp HOME      &kp LEFT      &kp DOWN      &kp RIGHT     &kp END       ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp F9        &kp F10       &kp F11       &kp F12       &kp BSPC       XXX     XXX      ___           &kp LC(LEFT)  ___           &kp LC(RIGHT) ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___           ___                             ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯                 ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        keyboard_layer {
            display-name = "CTRL";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           ___           ___           ___           ___           ___                    XXX      ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &bt BT_CLR    &out OUT_USB  &bt_sel_0     &bt_sel_1     &bt_sel_2     &bt_sel_3          XXX XXX XXX  ___           &kp F21       &kp F22       &kp F23       &kp F24       ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___            XXX     XXX      ___           &kp LANG3     &kp LANG4     &kp LANG5     ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___           ___                             ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯                 ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        qwerty_layer {
            display-name = "QWERTY";
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮                 ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    &kp ESC       &kp Q         &kp W         &kp E         &kp R         &kp T                  XXX      &kp Y         &kp U         &kp I         &kp O         &kp P         &to 0
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp TAB       &kp A         &kp S         &kp D         &kp F         &kp G              XXX XXX XXX  &kp H         &kp J         &kp K         &kp L         &kp SQT       &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LSHFT     &kp Z         &kp X         &kp C         &kp V         &kp B          XXX     XXX      &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &kp RSHFT
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤                 ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &kp RET       &kp SPACE     &kp ESC                         &kp SPACE     &kp M         &kp TAB
//                                           ╰─────────────┴─────────────┴─────────────╯                 ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};
