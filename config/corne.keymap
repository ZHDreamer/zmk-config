/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/bt.h>

#include "../keypos_def/keypos_36keys.h"                // keyposition helpers
#define KEYS_L LT0 LT1 LT2 LT3 LT4 LM0 LM1 LM2 LM3 LM4 LB0 LB1 LB2 LB3 LB4  // left-hand keys
#define KEYS_R RT0 RT1 RT2 RT3 RT4 RM0 RM1 RM2 RM3 RM4 RB0 RB1 RB2 RB3 RB4  // right-hand keys
#define THUMBS LH2 LH1 LH0 RH0 RH1 RH2                                      // thumb keys

#define XXX &none
#define ___ &trans
#define COMBO_TIMEOUT_SHORT 30

&lt {
    flavor = "balanced";
    tapping-term-ms = <200>;
};

/ {
    behaviors {
        tlt: thumb_layer_tap_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER_TAP_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&kp>;
        };

        tlh: thumb_layer_hold_preferred {
            compatible = "zmk,behavior-hold-tap";
            label = "THUMB_LAYER_HOLD_PREFERRED";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "hold-preferred";
            bindings = <&mo>, <&kp>;
        };

        hml: home_row_mode_left {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_R THUMBS>;
            hold-trigger-on-release;
        };

        hmr: home_row_mode_right {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODE";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <250>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <KEYS_L THUMBS>;
            hold-trigger-on-release;
        };
    };
    macros {
        // (|)
        pair_par: pair_par {
            label = "pair_parentheses";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT>;
        };
        // [|]
        pair_bkt: pair_bkt {
            label = "pair_brackets";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LBKT &kp RBKT &kp LEFT>;
        };
        // {|}
        pair_brc: pair_brc {
            label = "pair_braces";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp LBRC &kp RBRC &kp LEFT>;
        };
        // '|'
        pair_sqt: pair_sqt {
            label = "pair_single_quotes";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp SQT &kp SQT &kp LEFT>;
        };
        // "|"
        pair_dqt: pair_dqt {
            label = "pair_double_quotes";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp DQT &kp DQT &kp LEFT>;
        };
        // `|`
        pair_btk: pair_btk {
            label = "pair_backticks";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp GRAVE &kp LEFT>;
        };
        // ```|```
        pair_cbk: pair_cbk {
            label = "pair_code_block";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            wait-ms = <10>;
            tap-ms = <10>;
            bindings = <&kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp GRAVE &kp LEFT &kp LEFT &kp LEFT>;
        };
    };

/*  KEY POSITIONS
    ╭────────────────────────╮   ╭────────────────────────╮
    │  0   1   2   3   4   5 │   │  6   7   8   9  10  11 │
    │ 12  13  14  15  16  17 │   │ 18  19  20  21  22  23 │
    │ 24  25  26  27  28  29 │   │ 30  31  32  33  34  35 │
    ╰───────────╮ 36  37  38 │   │ 39  40  41 ╭───────────╯
                ╰────────────╯   ╰────────────╯            */

    combos {
        compatible = "zmk,combos";
        combo_bkt { // [|]
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <8 9>; // uy
            bindings = <&pair_bkt>;
            layers = <0 1 2 3>;
        };
        combo_par { // (|)
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <20 21>; // ei
            bindings = <&pair_par>;
            layers = <0 1 2 3>;
        };
        combo_brc { // {|}
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <32 33>; // ,.
            bindings = <&pair_brc>;
            layers = <0 1 2 3>;
        };
        combo_btk { // `|`
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <9 10>; // y;
            bindings = <&pair_btk>;
            layers = <0 1 2 3>;
        };
        combo_sqt { // '|'
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <21 22>; // io
            bindings = <&pair_sqt>;
            layers = <0 1 2 3>;
        };
        combo_dqt { // "|"
            timeout-ms = <COMBO_TIMEOUT_SHORT>;
            key-positions = <33 34>; // ./
            bindings = <&pair_dqt>;
            layers = <0 1 2 3>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        colemak_layer {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    XXX           &kp Q         &kp W         &kp F         &kp P         &kp B             &kp J         &kp L         &kp U         &kp Y         &kp SEMI      &to 4
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LCTRL     &hml LGUI A   &hml LALT R   &hml LCTRL S  &hml LSHFT T  &kp G             &kp M         &hmr RSHFT N  &hmr LCTRL E  &hmr LALT I   &hmr LGUI O   &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &mt LSHFT SQT &kp Z         &kp X         &kp C         &kp D         &kp V             &kp K         &kp H         &kp COMMA     &kp DOT       &kp FSLH      &mt RSHFT BSLH
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &mt LGUI RET  &tlt 2 SPACE  &lt 1 ESC         &lt 2 SPACE   &tlh 1 ESC    &mt LALT TAB
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        symbol_layer {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           &kp TILDE     &kp N1        &kp N2        &kp N3        &kp PIPE          &kp AMPS      &kp STAR      &kp LBKT      &kp RBKT      &kp CARET     ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp N0        &kp N4        &kp N5        &kp N6        &kp MINUS         &kp EQUAL     &kp UNDER     &kp LPAR      &kp RPAR      &kp DLLR      ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp GRAVE     &kp N7        &kp N8        &kp N9        &kp HASH          &kp PRCNT     &kp PLUS      &kp LBRC      &kp RBRC      &kp EXCL      ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___           ___               ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        function_layer {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           &kp F1        &kp F2        &kp F3        &kp F4        &kp PSCRN         ___           ___           &kp UP        ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp F5        &kp F6        &kp F7        &kp F8        &kp DEL           &kp HOME      &kp LEFT      &kp DOWN      &kp RIGHT     &kp END       ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           &kp F9        &kp F10       &kp F11       &kp F12       &kp BSPC          ___           &kp LC(LEFT)  ___           &kp LC(RIGHT) ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___           ___               ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        keyboard_layer {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    ___           ___           ___           ___           ___           ___               ___           ___           &out OUT_TOG  ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &bt BT_CLR    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4      ___           ___           ___           ___           ___           ___
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    ___           ___           ___           ___           ___           ___               ___           ___           ___           ___           ___           ___
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              ___           ___           ___               ___           ___           ___
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
        qwerty_layer {
            bindings = <
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
    XXX           &kp Q         &kp W         &kp E         &kp R         &kp T             &kp Y         &kp U         &kp I         &kp O         &kp P         &to 0
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &kp LCTRL     &kp A         &kp S         &kp D         &kp F         &kp G             &kp H         &kp J         &kp K         &kp L         &kp SQT       &kp BSPC
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
    &mt LSHFT SQT &kp Z         &kp X         &kp C         &kp V         &kp B             &kp N         &kp M         &kp COMMA     &kp DOT       &kp FSLH      &mt RSHFT BSLH
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                              &kp RET       &kp SPACE     &kp ESC           &kp SPACE     &kp ESC       &kp TAB
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯
            >;
        };
    };
};
